<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.hurui.micrometermetrics</groupId>
	<artifactId>prometheus-metrics-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>prometheus-metrics-service</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<main.class>com.hurui.micrometermetrics.prometheusmetricsservice.PrometheusMetricsServiceApplication</main.class>
		<java.version>1.8</java.version>		
		<vertx.version>3.9.4</vertx.version>
		<micrometer.registry.prometheus.version>1.1.0</micrometer.registry.prometheus.version>
		<logback.version>1.3.12</logback.version>
		<maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<maven.shade.plugin.version>3.2.3</maven.shade.plugin.version>
	</properties>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/io.vertx/vertx-core -->
		<dependency>
		    <groupId>io.vertx</groupId>
		    <artifactId>vertx-core</artifactId>
		    <version>${vertx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.vertx/vertx-web -->
		<dependency>
		    <groupId>io.vertx</groupId>
		    <artifactId>vertx-web</artifactId>
		    <version>${vertx.version}</version>
		</dependency>		
		<!-- https://mvnrepository.com/artifact/io.vertx/vertx-rx-java2 -->
		<dependency>
		    <groupId>io.vertx</groupId>
		    <artifactId>vertx-rx-java2</artifactId>
		    <version>${vertx.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.vertx/vertx-micrometer-metrics -->
		<dependency>
		    <groupId>io.vertx</groupId>
		    <artifactId>vertx-micrometer-metrics</artifactId>
		    <version>${vertx.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus -->
		<dependency>
		    <groupId>io.micrometer</groupId>
		    <artifactId>micrometer-registry-prometheus</artifactId>
		    <version>${micrometer.registry.prometheus.version}</version>
		</dependency>	
		
		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>${logback.version}</version>
		</dependency>
		
		<!-- Test Dependencies -->
		<!-- https://mvnrepository.com/artifact/io.vertx/vertx-junit5 -->
		<dependency>
		    <groupId>io.vertx</groupId>
		    <artifactId>vertx-junit5</artifactId>
		    <version>${vertx.version}</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Plugin for unit test execution -->
				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-surefire-plugin</artifactId>
				    <version>${maven.surefire.plugin.version}</version>	
				</plugin>
				<!-- We specify the Maven compiler plugin as we need to set it to Java 1.8 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
        				<!-- Important: there are issues with apt and incremental compilation in the maven-compiler-plugin -->
        				<useIncrementalCompilation>false</useIncrementalCompilation>													
					</configuration>	
				</plugin>
				<!-- 
				You only need the part below if you want to build your application into a fat executable jar. 
				This is a jar that contains all the dependencies required to run it, so you can just run it with 
				java -jar 
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven.shade.plugin.version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<transformers>
									<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
										<manifestEntries>
											<Main-Class>${main.class}</Main-Class>
										</manifestEntries>
									</transformer>
									<!-- this is not required since we are starting our verticles from the embedded Vert.x in our main method -->
									<!-- refer to link below if you wish to run verticles without embedding Vert.x -->
									<!-- https://github.com/vert-x3/vertx-examples/tree/master/maven-verticles/maven-verticle -->
									<!--<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
										<resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
									</transformer>-->
								</transformers>
								<artifactSet>
								</artifactSet>
								<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
