<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.hurui</groupId>
	<artifactId>vertx-micronaut-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>vertx-micronaut-demo</name>
	<description>Demo project for Spring Boot</description>
	
	<properties>
		<main.class>com.hurui.vertxmicronautdemo.VertxMicronautDemoApplication</main.class>
		<java.version>1.8</java.version>
		<vertx.version>3.9.4</vertx.version>
		<micronaut.version>1.3.5</micronaut.version>
	</properties>
	
	<dependencies>
		<!-- https://mvnrepository.com/artifact/io.vertx/vertx-core -->
		<dependency>
		    <groupId>io.vertx</groupId>
		    <artifactId>vertx-core</artifactId>
		    <version>${vertx.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.vertx/vertx-web -->
		<dependency>
		    <groupId>io.vertx</groupId>
		    <artifactId>vertx-web</artifactId>
		    <version>${vertx.version}</version>
		</dependency>	
		
		<!-- https://mvnrepository.com/artifact/io.micronaut/micronaut-inject -->
		<dependency>
		    <groupId>io.micronaut</groupId>
		    <artifactId>micronaut-inject</artifactId>
		    <version>${micronaut.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.micronaut/micronaut-inject-java -->
		<dependency>
		    <groupId>io.micronaut</groupId>
		    <artifactId>micronaut-inject-java</artifactId>
		    <version>${micronaut.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>1.2.3</version>
		</dependency>		
	</dependencies>
	
	<build>
		<pluginManagement>
			<plugins>
				<!-- We specify the Maven compiler plugin as we need to set it to Java 1.8 -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<annotationProcessorPaths>
							<path>
								<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
								<groupId>io.micronaut</groupId>
								<artifactId>micronaut-inject-java</artifactId>
								<version>${micronaut.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>			
				</plugin>
			</plugins>
		</pluginManagement>
		<!-- 
		You only need the part below if you want to build your application into a fat executable jar. 
		This is a jar that contains all the dependencies required to run it, so you can just run it with 
		java -jar 
		-->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${main.class}</Main-Class>
									</manifestEntries>
								</transformer>
								<!-- this is not required since we are starting our verticles from the embedded Vert.x in our main method -->
								<!-- refer to link below if you wish to run verticles without embedding Vert.x -->
								<!-- https://github.com/vert-x3/vertx-examples/tree/master/maven-verticles/maven-verticle -->
								<!--<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
								</transformer>-->
							</transformers>
							<artifactSet>
							</artifactSet>
							<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
