<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.hurui</groupId>
	<artifactId>infinispan-configstore-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>infinispan-configstore-server</name>
	<description>Demo project for Spring Boot</description>

	<properties>	
		<main.class>com.hurui.infinispanconfigstoreserver.InfinispanConfigstoreServerApplication</main.class>
		<java.version>1.8</java.version>
		<vertx.version>3.9.1</vertx.version>
		<logback.version>1.2.3</logback.version>
	</properties>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/io.vertx/vertx-core -->
		<dependency>
		    <groupId>io.vertx</groupId>
		    <artifactId>vertx-core</artifactId>
		    <version>${vertx.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.vertx/vertx-infinispan -->
		<dependency>
		    <groupId>io.vertx</groupId>
		    <artifactId>vertx-infinispan</artifactId>
		    <version>${vertx.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>${logback.version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- We specify the Maven compiler plugin as we need to set it to Java 1.8 -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>			
				</plugin>
			</plugins>
		</pluginManagement>
		<!-- 
		You only need the part below if you want to build your application into a fat executable jar. 
		This is a jar that contains all the dependencies required to run it, so you can just run it with 
		java -jar 
		-->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${main.class}</Main-Class>
									</manifestEntries>
								</transformer>
								<!-- this is not required since we are starting our verticles from the embedded Vert.x in our main method -->
								<!-- refer to link below if you wish to run verticles without embedding Vert.x -->
								<!-- https://github.com/vert-x3/vertx-examples/tree/master/maven-verticles/maven-verticle -->
								<!--<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
								</transformer>-->
							</transformers>
							<artifactSet>
							</artifactSet>
							<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
